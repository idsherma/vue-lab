if(undefined==window.JST){window.JST={};} window.JST["anyOf"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('{{# def.definitions }}\n{{# def.errors }}\n{{# def.setupKeyword }}\n{{# def.setupNextLevel }}\n\n{{\n  var $noEmptySchema = $schema.every(function($sch) {\n    return {{# def.nonEmptySchema:$sch }};\n  });\n}}\n{{? $noEmptySchema }}\n  {{ var $currentBaseId = $it.baseId; }}\n  var {{=$errs}} = errors;\n  var {{=$valid}} = false;\n\n  {{# def.setCompositeRule }}\n\n  {{~ $schema:$sch:$i }}\n    {{\n      $it.schema = $sch;\n      $it.schemaPath = $schemaPath + \'[\' + $i + \']\';\n      $it.errSchemaPath = $errSchemaPath + \'/\' + $i;\n    }}\n\n    {{# def.insertSubschemaCode }}\n\n    {{=$valid}} = {{=$valid}} || {{=$nextValid}};\n\n    if (!{{=$valid}}) {\n    {{ $closingBraces += \'}\'; }}\n  {{~}}\n\n  {{# def.resetCompositeRule }}\n\n  {{= $closingBraces }}\n\n  if (!{{=$valid}}) {\n    {{# def.addError:\'anyOf\' }}\n  } else {\n    {{# def.resetErrors }}\n  {{? it.opts.allErrors }} } {{?}}\n\n  {{# def.cleanUp }}\n{{??}}\n  {{? $breakOnError }}\n    if (true) {\n  {{?}}\n{{?}}\n');}return __p.join('');}