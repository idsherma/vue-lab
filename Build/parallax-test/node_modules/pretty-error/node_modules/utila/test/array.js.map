{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "/parallax-test/node_modules/pretty-error/node_modules/utila/test/array.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "require './_prepare'\n\narray = mod 'array'\n\ntest 'from', ->\n\n\tarray.from([1]).should.be.an.instanceOf Array\n\tarray.from([1])[0].should.equal 1\n\n# test 'clone', ->\n\n# \ta = [0, 1, 2]\n\n# \tb = array.clone a\n\n# \tb[0].should.equal 0\n# \tb[1].should.equal 1\n\n# \tb[0] = 3\n\n# \ta[0].should.equal 0\n\ntest 'pluck', ->\n\n\ta = [0, 1, 2, 3]\n\n\tafter = array.pluck a, 1\n\n\tafter.length.should.equal 3\n\n\tafter[0].should.equal 0\n\tafter[1].should.equal 2\n\tafter[2].should.equal 3\n\tafter.should.equal a\n\ntest 'pluckMultiple', ->\n\n\ta = [0, 1, 2, 3, 4, 5, 6]\n\n\tarray.pluckMultiple a, [0, 4, 2, 6]\n\n\ta.length.should.equal 3\n\ta[0].should.equal 1\n\ta[1].should.equal 3\n\ta[2].should.equal 5\n\ntest 'pluckItem', ->\n\n\ta = [0, 1, 2, 3, 2, 4, 2]\n\n\tarray.pluckItem a, 2\n\n\ta[0].should.equal 0\n\ta[1].should.equal 1\n\ta[2].should.equal 3\n\ta[3].should.equal 4\n\n\tarray.pluckItem([1], 2).length.should.equal 1\n\n\ntest 'pluckOneItem', ->\n\n\ta = [0, 1, 2, 3, 2, 4, 2]\n\n\tarray.pluckOneItem a, 2\n\n\ta[0].should.equal 0\n\ta[1].should.equal 1\n\ta[2].should.equal 3\n\ta[3].should.equal 2\n\ta[4].should.equal 4\n\ta[5].should.equal 2\n\n\ta = [1, 2]\n\n\tarray.pluckOneItem a, 1\n\n\ta.length.should.equal 1\n\ta[0].should.equal 2\n\n\tarray.pluckOneItem([], 1).length.should.equal 0\n\n\tarray.pluckOneItem([1], 2).length.should.equal 1\n\ntest 'plcukByCallback', ->\n\n\ta = [0, 1, 2, 3]\n\n\tarray.pluckByCallback a, (val, i) ->\n\n\t\treturn yes if val is 2\n\n\t\treturn no\n\n\ta[0].should.equal 0\n\ta[1].should.equal 1\n\ta[2].should.equal 3\n\ntest 'injectByCallback', ->\n\n\tshouldInject = (valA, valB, toInject) ->\n\n\t\tunless valA?\n\n\t\t\treturn yes if toInject <= valB\n\n\t\t\treturn no\n\n\t\tunless valB?\n\n\t\t\treturn yes if valA <= toInject\n\n\t\t\treturn no\n\n\t\treturn yes if valA <= toInject <= valB\n\n\t\treturn no\n\n\ta = [0.5, 1, 2.5, 2.5, 2.75, 2.75, 3]\n\n\tarray.injectByCallback a, 0, shouldInject\n\n\ta[0].should.equal 0\n\ta[1].should.equal 0.5\n\ta[7].should.equal 3\n\n\ta = [0.5, 1, 2.5, 2.5, 2.75, 2.75, 3]\n\n\tarray.injectByCallback a, 2.7, shouldInject\n\n\ta[0].should.equal 0.5\n\ta[4].should.equal 2.7\n\ta[5].should.equal 2.75\n\ta[7].should.equal 3\n\n\ta = [0.5, 1, 2.5, 2.5, 2.75, 2.75, 3]\n\n\tarray.injectByCallback a, 3.2, shouldInject\n\n\ta[0].should.equal 0.5\n\ta[4].should.equal 2.75\n\ta[6].should.equal 3\n\ta[7].should.equal 3.2"
  ]
}