if(undefined==window.JST){window.JST={};} window.JST["switch"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('{{# def.definitions }}\n{{# def.errors }}\n{{# def.setupKeyword }}\n{{# def.setupNextLevel }}\n\n\n{{## def.validateIf:\n  {{# def.setCompositeRule }}\n  {{ $it.createErrors = false; }}\n  {{# def._validateSwitchRule:if }}\n  {{ $it.createErrors = true; }}\n  {{# def.resetCompositeRule }}\n  {{=$ifPassed}} = valid{{=$it.level}};\n#}}\n\n{{## def.validateThen:\n  {{? typeof $sch.then == \'boolean\' }}\n    {{? $sch.then === false }}\n      {{# def.error:\'switch\' }}\n    {{?}}\n    var valid{{=$it.level}} = {{= $sch.then }};\n  {{??}}\n    {{# def._validateSwitchRule:then }}\n  {{?}}\n#}}\n\n{{## def._validateSwitchRule:_clause:\n  {{\n    $it.schema = $sch._clause;\n    $it.schemaPath = $schemaPath + \'[\' + $caseIndex + \']._clause\';\n    $it.errSchemaPath = $errSchemaPath + \'/\' + $caseIndex + \'/_clause\';\n  }}\n  {{# def.insertSubschemaCode }}\n#}}\n\n{{## def.switchCase:\n  {{? $sch.if && {{# def.nonEmptySchema:$sch.if }} }}\n    var {{=$errs}} = errors;\n    {{# def.validateIf }}\n    if ({{=$ifPassed}}) {\n      {{# def.validateThen }}  \n    } else {\n      {{# def.resetErrors }}\n    }\n  {{??}}\n    {{=$ifPassed}} = true;\n    {{# def.validateThen }}\n  {{?}}\n#}}\n\n\n{{\n  var $ifPassed = \'ifPassed\' + it.level\n    , $currentBaseId = $it.baseId\n    , $shouldContinue;\n}}\nvar {{=$ifPassed}};\n\n{{~ $schema:$sch:$caseIndex }}\n  {{? $caseIndex && !$shouldContinue }}\n    if (!{{=$ifPassed}}) {\n    {{ $closingBraces+= \'}\'; }}\n  {{?}}\n\n  {{# def.switchCase }}\n  {{ $shouldContinue = $sch.continue }}\n{{~}}\n\n{{= $closingBraces }}\n\nvar {{=$valid}} = valid{{=$it.level}};\n\n{{# def.cleanUp }}\n');}return __p.join('');}