{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "/parallax-test/node_modules/dom-converter/scripts/coffee/lib/saneObjectToDom.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "module.exports = self =\r\n\r\n\tconvert: (obj) ->\r\n\r\n\t\tself._arrayToChildren obj\r\n\r\n\t_arrayToChildren: (a, parent = null) ->\r\n\r\n\t\tchildren = []\r\n\r\n\t\tprev = null\r\n\r\n\t\tfor v in a\r\n\r\n\t\t\tif typeof v is 'string'\r\n\r\n\t\t\t\tnode = self._getTextNodeFor v\r\n\r\n\t\t\telse\r\n\r\n\t\t\t\tnode = self._objectToNode v, parent\r\n\r\n\t\t\t\tnode.prev = null\r\n\t\t\t\tnode.next = null\r\n\t\t\t\tnode.parent = parent\r\n\r\n\t\t\t\tif prev?\r\n\r\n\t\t\t\t\tnode.prev = prev\r\n\t\t\t\t\tprev.next = node\r\n\r\n\t\t\t\tprev = node\r\n\r\n\t\t\tchildren.push node\r\n\r\n\t\tchildren\r\n\r\n\t_objectToNode: (o) ->\r\n\r\n\t\ti = 0\r\n\r\n\t\tfor own k, v of o\r\n\r\n\t\t\tif i > 0\r\n\r\n\t\t\t\tthrow Error \"_objectToNode() only accepts an object with one key/value\"\r\n\r\n\t\t\tkey = k\r\n\t\t\tval = v\r\n\r\n\t\t\ti++\r\n\r\n\t\tnode = {}\r\n\r\n\t\tif typeof key isnt 'string'\r\n\r\n\t\t\tthrow Error \"_objectToNode()'s key must be a string of tag name and classes\"\r\n\r\n\t\tif typeof val is 'string'\r\n\r\n\t\t\tchildren = [self._getTextNodeFor(val)]\r\n\r\n\t\telse if Array.isArray val\r\n\r\n\t\t\tchildren = self._arrayToChildren val, node\r\n\r\n\t\telse\r\n\r\n\t\t\tinspect o\r\n\t\t\tthrow Error \"_objectToNode()'s key's value must only be a string or an array\"\r\n\r\n\t\tnode.type = 'tag'\r\n\t\t{name, attribs} = self._parseTag key\r\n\t\tnode.name = name\r\n\t\tnode.attribs = attribs\r\n\t\tnode.children = children\r\n\r\n\t\tnode\r\n\r\n\t_getTextNodeFor: (s) ->\r\n\r\n\t\t{type: 'text', data: s}\r\n\r\n\t_nameRx: /^[a-zA-Z\\-\\_]{1}[a-zA-Z0-9\\-\\_]*$/\r\n\r\n\t_parseTag: (k) ->\r\n\r\n\t\t# validate\r\n\t\tif not k.match(/^[a-zA-Z0-9\\#\\-\\_\\.\\[\\]\\\"\\'\\=\\,\\s]+$/) or k.match(/^[0-9]+/)\r\n\r\n\t\t\tthrow Error \"cannot parse tag `#{k}`\"\r\n\r\n\t\tattribs = {}\r\n\r\n\t\tparts =\r\n\r\n\t\t\tname: ''\r\n\r\n\t\t\tattribs: attribs\r\n\r\n\t\t# tag name\r\n\t\tif m = k.match /^([^\\.#]+)/\r\n\r\n\t\t\tname = m[1]\r\n\r\n\t\t\tunless name.match self._nameRx\r\n\r\n\t\t\t\tthrow Error \"tag name `#{name}` is not valid\"\r\n\r\n\t\t\tparts.name = name\r\n\r\n\t\t\tk = k.substr name.length, k.length\r\n\r\n\t\t# tag id\r\n\t\tif m = k.match /^#([a-zA-Z0-9\\-]+)/\r\n\r\n\t\t\tid = m[1]\r\n\r\n\t\t\tunless id.match self._nameRx\r\n\r\n\t\t\t\tthrow Error \"tag id `#{id}` is not valid\"\r\n\r\n\t\t\tattribs.id = id\r\n\r\n\t\t\tk = k.substr id.length + 1, k.length\r\n\r\n\t\tclasses = []\r\n\r\n\t\t# the class attrib\r\n\t\twhile m = k.match /\\.([a-zA-Z0-9\\-\\_]+)/\r\n\r\n\t\t\tcls = m[1]\r\n\r\n\t\t\tunless cls.match self._nameRx\r\n\r\n\t\t\t\tthrow Error \"tag class `#{cls}` is not valid\"\r\n\r\n\t\t\tclasses.push cls\r\n\r\n\t\t\tk = k.replace '.' + cls, ''\r\n\r\n\t\tif classes.length\r\n\r\n\t\t\tattribs.class = classes.join \" \"\r\n\r\n\t\t# TODO: match attributes like [a=b]\r\n\r\n\t\tparts"
  ]
}