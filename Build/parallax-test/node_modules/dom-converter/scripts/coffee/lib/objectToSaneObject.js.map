{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "/parallax-test/node_modules/dom-converter/scripts/coffee/lib/objectToSaneObject.coffee"
  ],
  "names": [],
  "mappings": "AAAA;AAAA,MAAA,YAAA;IAAA;;EAAC,SAAU,OAAA,CAAQ,OAAR,EAAV;;EAED,MAAM,CAAC,OAAP,GAAiB,IAAA,GAEhB;IAAA,QAAA,EAAU,SAAC,GAAD;aAET,IAAI,CAAC,WAAL,CAAiB,GAAjB;IAFS,CAAV;IAIA,WAAA,EAAa,SAAC,GAAD;AAEZ,UAAA;MAAA,IAAG,MAAM,CAAC,YAAP,CAAoB,GAApB,CAAH;AAEC,eAAO,IAAI,CAAC,iBAAL,CAAuB,GAAvB,EAFR;OAAA,MAIK,IAAG,KAAK,CAAC,OAAN,CAAc,GAAd,CAAH;AAEJ,eAAO,IAAI,CAAC,gBAAL,CAAsB,GAAtB,EAFH;OAAA,MAIA,IAAG,GAAA,KAAO,IAAP,IAAe,OAAO,GAAP,KAAc,WAAhC;AAEJ,eAAO,GAFH;OAAA,MAIA,WAAG,OAAO,IAAP,KAAe,QAAf,IAAA,GAAA,KAAyB,QAA5B;AAEJ,eAAO,CAAC,MAAA,CAAO,GAAP,CAAD,EAFH;OAAA,MAAA;AAMJ,cAAM,KAAA,CAAM,2BAAA,GAA4B,GAAlC,EANF;;IAdO,CAJb;IA0BA,iBAAA,EAAmB,SAAC,CAAD;AAElB,UAAA;MAAA,CAAA,GAAI;AAEJ,WAAA,QAAA;;;QAEC,GAAA,GAAM;QAEN,GAAI,CAAA,GAAA,CAAJ,GAAW,IAAI,CAAC,QAAL,CAAc,GAAd;QAEX,CAAC,CAAC,IAAF,CAAO,GAAP;AAND;aAQA;IAZkB,CA1BnB;IAwCA,gBAAA,EAAkB,SAAC,CAAD;AAEjB,UAAA;MAAA,GAAA,GAAM;AAEN,WAAA,mCAAA;;QAEC,GAAG,CAAC,IAAJ,CAAS,IAAI,CAAC,OAAL,CAAa,CAAb,CAAT;AAFD;aAIA;IARiB,CAxClB;IAkDA,OAAA,EAAS,SAAC,CAAD;AAER,UAAA;MAAA,WAAG,OAAO,EAAP,KAAa,QAAb,IAAA,GAAA,KAAuB,QAA1B;AAEC,eAAO,MAAA,CAAO,CAAP,EAFR;OAAA,MAIK,IAAG,MAAM,CAAC,YAAP,CAAoB,CAApB,CAAH;QAEJ,IAAA,GAAO,MAAM,CAAC,IAAP,CAAY,CAAZ;QAEP,IAAG,IAAI,CAAC,MAAL,KAAiB,CAApB;AAEC,gBAAM,KAAA,CAAM,2CAAN,EAFP;;QAIA,GAAA,GAAM,IAAK,CAAA,CAAA;QAEX,GAAA,GAAM;QAEN,GAAI,CAAA,GAAA,CAAJ,GAAW,IAAI,CAAC,WAAL,CAAiB,CAAE,CAAA,GAAA,CAAnB;AAEX,eAAO,IAdH;OAAA,MAAA;AAkBJ,cAAM,KAAA,CAAM,qBAAA,GAAsB,CAAtB,GAAwB,GAA9B,EAlBF;;IANG,CAlDT;;AAJD",
  "sourcesContent": [
    "{object} = require 'utila'\r\n\r\nmodule.exports = self =\r\n\r\n\tsanitize: (val) ->\r\n\r\n\t\tself._toChildren val\r\n\r\n\t_toChildren: (val) ->\r\n\r\n\t\tif object.isBareObject val\r\n\r\n\t\t\treturn self._objectToChildren val\r\n\r\n\t\telse if Array.isArray val\r\n\r\n\t\t\treturn self._arrayToChildren val\r\n\r\n\t\telse if val is null or typeof val is 'undefined'\r\n\r\n\t\t\treturn []\r\n\r\n\t\telse if typeof val in ['string', 'number']\r\n\r\n\t\t\treturn [String val]\r\n\r\n\t\telse\r\n\r\n\t\t\tthrow Error \"not a valid child node: `#{val}\"\r\n\r\n\t_objectToChildren: (o) ->\r\n\r\n\t\ta = []\r\n\r\n\t\tfor own key, val of o\r\n\r\n\t\t\tcur = {}\r\n\r\n\t\t\tcur[key] = self.sanitize val\r\n\r\n\t\t\ta.push cur\r\n\r\n\t\ta\r\n\r\n\t_arrayToChildren: (a) ->\r\n\r\n\t\tret = []\r\n\r\n\t\tfor v in a\r\n\r\n\t\t\tret.push self._toNode v\r\n\r\n\t\tret\r\n\r\n\t_toNode: (o) ->\r\n\r\n\t\tif typeof o in ['string', 'number']\r\n\r\n\t\t\treturn String o\r\n\r\n\t\telse if object.isBareObject o\r\n\r\n\t\t\tkeys = Object.keys(o)\r\n\r\n\t\t\tif keys.length isnt 1\r\n\r\n\t\t\t\tthrow Error \"a node must only have one key as tag name\"\r\n\r\n\t\t\tkey = keys[0]\r\n\r\n\t\t\tobj = {}\r\n\r\n\t\t\tobj[key] = self._toChildren o[key]\r\n\r\n\t\t\treturn obj\r\n\r\n\t\telse\r\n\r\n\t\t\tthrow Error \"not a valid node: `#{o}`\"\r\n\r\n"
  ]
}