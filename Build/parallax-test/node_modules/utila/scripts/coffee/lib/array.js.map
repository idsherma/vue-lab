{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "/parallax-test/node_modules/utila/scripts/coffee/lib/array.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "module.exports = array =\n\n\t###\n\tTries to turn anything into an array.\n\t###\n\tfrom: (r) ->\n\n\t\tArray::slice.call r\n\n\t###\n\tClone of an array. Properties will be shallow copies.\n\t###\n\tsimpleClone: (a) ->\n\n\t\ta.slice 0\n\n\tshallowEqual: (a1, a2) ->\n\n\t\treturn no unless Array.isArray(a1) and Array.isArray(a2) and a1.length is a2.length\n\n\t\tfor val, i in a1\n\n\t\t\treturn no unless a2[i] is val\n\n\t\tyes\n\n\tpluck: (a, i) ->\n\n\t\treturn a if a.length < 1\n\n\n\t\tfor value, index in a\n\n\t\t\tif index > i\n\n\t\t\t\ta[index - 1] = a[index]\n\n\t\ta.length = a.length - 1\n\n\t\ta\n\n\tpluckItem: (a, item) ->\n\n\t\treturn a if a.length < 1\n\n\n\t\tremoved = 0\n\n\t\tfor value, index in a\n\n\t\t\tif value is item\n\n\t\t\t\tremoved++\n\n\t\t\t\tcontinue\n\n\t\t\tif removed isnt 0\n\n\t\t\t\ta[index - removed] = a[index]\n\n\t\ta.length = a.length - removed if removed > 0\n\n\t\ta\n\n\tpluckOneItem: (a, item) ->\n\n\t\treturn a if a.length < 1\n\n\t\treached = no\n\n\t\tfor value, index in a\n\n\t\t\tif not reached\n\n\t\t\t\tif value is item\n\n\t\t\t\t\treached = yes\n\n\t\t\t\t\tcontinue\n\n\t\t\telse\n\n\t\t\t\ta[index - 1] = a[index]\n\n\t\ta.length = a.length - 1 if reached\n\n\t\ta\n\n\tpluckByCallback: (a, cb) ->\n\n\t\treturn a if a.length < 1\n\n\t\tremoved = 0\n\n\t\tfor value, index in a\n\n\t\t\tif cb value, index\n\n\t\t\t\tremoved++\n\n\t\t\t\tcontinue\n\n\t\t\tif removed isnt 0\n\n\t\t\t\ta[index - removed] = a[index]\n\n\t\tif removed > 0\n\n\t\t\ta.length = a.length - removed\n\n\t\ta\n\n\tpluckMultiple: (array, indexesToRemove) ->\n\n\t\treturn array if array.length < 1\n\n\t\tremovedSoFar = 0\n\n\t\tindexesToRemove.sort()\n\n\t\tfor i in indexesToRemove\n\n\t\t\t@pluck array, i - removedSoFar\n\n\t\t\tremovedSoFar++\n\n\t\tarray\n\n\tinjectByCallback: (a, toInject, shouldInject) ->\n\n\t\tvalA = null\n\n\t\tvalB = null\n\n\t\tlen = a.length\n\n\t\tif len < 1\n\n\t\t\ta.push toInject\n\n\t\t\treturn a\n\n\n\t\tfor val, i in a\n\n\t\t\tvalA = valB\n\n\t\t\tvalB = val\n\n\t\t\tif shouldInject valA, valB, toInject\n\n\t\t\t\treturn a.splice i, 0, toInject\n\n\t\ta.push toInject\n\n\t\ta\n\n\tinjectInIndex: (a, index, toInject) ->\n\n\t\tlen = a.length\n\n\t\ti = index\n\n\t\tif len < 1\n\n\t\t\ta.push toInject\n\n\t\t\treturn a\n\n\t\ttoPut = toInject\n\n\t\ttoPutNext = null\n\n\t\t`for(; i <= len; i++){\n\n\t\t\ttoPutNext = a[i];\n\n\t\t\ta[i] = toPut;\n\n\t\t\ttoPut = toPutNext;\n\n\t\t}`\n\n\t\t# a[i] = toPut\n\n\t\tnull"
  ]
}