{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "/parallax-test/node_modules/utila/scripts/coffee/lib/object.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "_common = require './_common'\n\nmodule.exports = object =\n\n\tisBareObject: _common.isBareObject.bind _common\n\n\t###\n\tif object is an instance of a class\n\t###\n\tisInstance: (what) ->\n\n\t\tnot @isBareObject what\n\n\t###\n\tAlias to _common.typeOf\n\t###\n\ttypeOf: _common.typeOf.bind _common\n\n\t###\n\tAlias to _common.clone\n\t###\n\tclone: _common.clone.bind _common\n\n\t###\n\tEmpties an object of its properties.\n\t###\n\tempty: (o) ->\n\n\t\tfor prop of o\n\n\t\t\tdelete o[prop] if o.hasOwnProperty prop\n\n\t\to\n\n\t###\n\tEmpties an object. Doesn't check for hasOwnProperty, so it's a tiny\n\tbit faster. Use it for plain objects.\n\t###\n\tfastEmpty: (o) ->\n\n\t\tdelete o[property] for property of o\n\n\t\to\n\n\t###\n\tOverrides values fomr `newValues` on `base`, as long as they\n\talready exist in base.\n\t###\n\toverrideOnto: (base, newValues) ->\n\n\t\treturn base if not @isBareObject(newValues) or not @isBareObject(base)\n\n\t\tfor key, oldVal of base\n\n\t\t\tnewVal = newValues[key]\n\n\t\t\tcontinue if newVal is undefined\n\n\t\t\tif typeof newVal isnt 'object' or @isInstance newVal\n\n\t\t\t\tbase[key] = @clone newVal\n\n\t\t\t# newVal is a plain object\n\t\t\telse\n\n\t\t\t\tif typeof oldVal isnt 'object' or @isInstance oldVal\n\n\t\t\t\t\tbase[key] = @clone newVal\n\n\t\t\t\telse\n\n\t\t\t\t\t@overrideOnto oldVal, newVal\n\t\tbase\n\n\t###\n\tTakes a clone of 'base' and runs #overrideOnto on it\n\t###\n\toverride: (base, newValues) ->\n\n\t\t@overrideOnto @clone(base), newValues\n\n\tappend: (base, toAppend) ->\n\n\t\t@appendOnto @clone(base), toAppend\n\n\t# Deep appends values from `toAppend` to `base`\n\tappendOnto: (base, toAppend) ->\n\n\t\treturn base if not @isBareObject(toAppend) or not @isBareObject(base)\n\n\t\tfor own key, newVal of toAppend\n\n\t\t\tcontinue unless newVal isnt undefined\n\n\t\t\tif typeof newVal isnt 'object' or @isInstance newVal\n\n\t\t\t\tbase[key] = newVal\n\n\t\t\telse\n\n\t\t\t\t# newVal is a bare object\n\n\t\t\t\toldVal = base[key]\n\n\t\t\t\tif typeof oldVal isnt 'object' or @isInstance oldVal\n\n\t\t\t\t\tbase[key] = @clone newVal\n\n\t\t\t\telse\n\n\t\t\t\t\t@appendOnto oldVal, newVal\n\n\t\tbase\n\n\t# Groups\n\tgroupProps: (obj, groups) ->\n\n\t\tgrouped = {}\n\n\t\tfor name, defs of groups\n\n\t\t\tgrouped[name] = {}\n\n\t\tgrouped['rest'] = {}\n\n\t\t`top: //`\n\t\tfor key, val of obj\n\n\t\t\tshouldAdd = no\n\n\t\t\tfor name, defs of groups\n\n\t\t\t\tunless Array.isArray defs\n\n\t\t\t\t\tdefs = [defs]\n\n\t\t\t\tfor def in defs\n\n\t\t\t\t\tif typeof def is 'string'\n\n\t\t\t\t\t\tif key is def\n\n\t\t\t\t\t\t\tshouldAdd = yes\n\n\t\t\t\t\telse if def instanceof RegExp\n\n\t\t\t\t\t\tif def.test key\n\n\t\t\t\t\t\t\tshouldAdd = yes\n\n\t\t\t\t\telse if def instanceof Function\n\n\t\t\t\t\t\tif def key\n\n\t\t\t\t\t\t\tshouldAdd = yes\n\n\t\t\t\t\telse\n\n\t\t\t\t\t\tthrow Error 'Group definitions must either\n\t\t\t\t\t\tbe strings, regexes, or functions.'\n\n\t\t\t\t\tif shouldAdd\n\n\t\t\t\t\t\tgrouped[name][key] = val\n\n\t\t\t\t\t\t`continue top`\n\n\t\t\tgrouped['rest'][key] = val\n\n\t\tgrouped"
  ]
}